"hit","original_file","method","failure_description","test_description","gold_standard"
"HIT01_8","8_DateTimeZone.java","forOffsetHoursMinutes","java.lang.IllegalArgumentException: Minutes out of range: -15","assertEquals(DateTimeZone.forID(""-02:15""), DateTimeZone.forOffsetHoursMinutes(-2, -15));","The specification states, that the method ""DateTimeZone()"" accepts a minutes offset value in the range of -59 to 59 inlcusive. The method checks if this value, stored as ""minutesOffset"", is within these bounds on line 279, but incorrectly throws an ""IllegalArgumentException"" for any minutes offset less than zero instead of less than -59."
"HIT02_24","24_GrayPaintScale.java","getPaint"," java.lang.IllegalArgumentException: Color parameter outside of expected range: Red Green Blue","GrayPaintScale gps = new GrayPaintScale();
c = (Color) gps.getPaint(-0.5);
assertTrue(c.equals(Color.black));","The ""getPaint"" method checks if the input ""value"" lies within specified upper and lower bounds, and corrects inputs that are too large or too small. The corrected input is saved in a new variable ""v"". The calculation on line 117 uses the original ""value"" instead of the corrected ""v"", causing the ""IllegalArgumentException"" to be thrown."
"HIT03_6","6_CharSequenceTranslator.java","translate"," java.lang.StringIndexOutOfBoundsException: String index out of range: 2 ","assertEquals(""\uD83D\uDE30"", StringEscapeUtils.escapeCsv(""\uD83D\uDE30""));","The ""translate"" method accesses the character sequence at the index specified with the ""pos"" variable. The ""pos"" variable is incremented within the while loop on lines 84-97. The loop executes as long as ""pos"" is smaller than the length of the character sequence. In this case the character sequence is of length two. A ""pos"" value of 2 is not smaller than the length of the character sequence, but since indexing starts at 0 trying to access this character sequence at index 2 results in a ""StringIndexOutOfBoundsException"""
"HIT04_7","7_TimePeriodValues.java","updateBounds","junit.framework.AssertionFailedError: expected:<1> but was:<3>","TimePeriodValues s = new TimePeriodValues(""Test"");
s.add(new SimpleTimePeriod(0L, 50L), 3.0);
assertEquals(1, s.getMaxMiddleIndex());","The ""updateBounds"" method updates the ""maxMiddleIndex"" on lines 298-310. On lines 299 and 301 the method ""getDataItem"" is called with the ""minMiddleIndex"" value, which causes ""maxMiddleIndex"" to be updated incorrectly and the ""AssertionFailedError"""
"HIT05_35","35_ArrayUtils.java","add","java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljav
a.lang.String;","String[] sa = ArrayUtils.add(stringArray, aString);
          fail(""Should have caused IllegalArgumentException"");","The method ""add"" accepts two input variables ""T[] array"" and ""T element"". In order to add ""element"" to the array, a new array ""newArray"" of objects of type ""T"" is created, to which ""element"" is then appended. ""newArray"" is initialized on line 3290 using the ""copyArrayGrow1"" method, which takes the input ""array"" and a variable ""type"" denoting the type of objects held in the array. Since the input ""array"" is non-Null, ""type"" is set to the type of ""array"" on line 3288. Because ""type"" is set to the type of ""array"", which is ""Object.class"", instead of the type of objects contained in the array, which is ""T"", the array returned by the ""copyArrayGrow1"" method does not match the type declaration of the ""newArray"" variable, leading to a ""ClassCastException""."
"HIT06_51","51_CodeConsumer.java","addNumber"," junit.framework.ComparisonFailure: expected:<var x=[-0.]0> but was:<var x=[]0>"," assertPrint(""var x = -0.0;"", ""var x=-0.0"");","The method ""addNumber"" is passed the value ""-0.0"", as the input variable ""x"" of type double. Since -0.0 and 0.0 are equal, the conditional clause on line 241 is skipped. The input is cast as type ""long"" to a new variable ""value"" on line 248, which gets rid of the sign and fractional part, causing the assertion to fail."
"HIT07_33","33_ClassUtils.java","toClass","java.lang.NullPointerException","assertTrue(Arrays.equals(new Class[] { String.class, null, Double.class },
                ClassUtils.toClass(new Object[] { ""Test"", null, 99d })));","The method ""toClass"" accepts the input variable ""array"". The for-loop on lines 909-911 iterates over all members of the array and dereferences them without checking for null values first. This causes the ""getClass"" method on line 910 to throw a ""NullPointerException"" when called on array members that are null."
"HIT08_54","54_LocaleUtils.java","toLocale"," java.lang.IllegalArgumentException: Invalid locale format: fr__POSIX","assertValidToLocale(""fr__POSIX"", ""fr"", """", ""POSIX"");","The method """"toLocale"""" accepts a string variable """"str"""" as input, which it parses for a valid locale. The input """"fr__POSIX"""" in this case contains an underscore as the third and fourth characters. The conditional on line 115 checks, whether the fourth character, saved in variable """"ch3"""", is an upper-case letter between """"A"""" and """"Z"""". Since """"ch3"""" is an underscore, the expression """"ch3 > 'Z'"""" evaluates to true, and an """"IllegalArgumentException"""" is thrown."
