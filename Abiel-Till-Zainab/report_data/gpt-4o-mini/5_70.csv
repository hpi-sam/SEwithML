,Code,Test1,Test2,Test3,Test4,Test5,Coverage
1,"from typing import Dict, List, Tuple, Optional, Any",1,1,1,1,1,5
3,"def gridworld_5_cases_70_percent_returns(current_position: Tuple[int, int], actions: List[str]) -> Dict[str, Any]:",1,1,1,1,1,5
4,"""""""",1,1,1,1,1,5
5,Processes an action sequence in a 2d gridworld using an internal state.,1,1,1,1,1,5
7,Args:,1,1,1,1,1,5
8,"current_position (Tuple[int, int]): Position (x, y).",1,1,1,1,1,5
9,"actions (List[str]): List of actions, e.g., [""north"", ""east""].",1,1,1,1,1,5
11,Returns:,1,1,1,1,1,5
12,"Dict[str, any]: Contains valid_action_sequence (bool) and final_position (Tuple[int, int]).",1,1,1,1,1,5
13,"""""""",1,1,1,1,1,5
14,DIRECTIONS = {,1,1,1,1,1,5
15,"'north': (-1, 0),",1,1,1,1,1,5
16,"'south': (1, 0),",1,1,1,1,1,5
17,"'east': (0, 1),",1,1,1,1,1,5
18,"'west': (0, -1)",1,1,1,1,1,5
19,},1,1,1,1,1,5
21,"def move(position: Tuple[int, int], direction: str) -> Tuple[int, int]:",1,1,1,1,1,5
22,"dx, dy = DIRECTIONS[direction]",0,1,0,1,0,2
23,"return (position[0] + dx, position[1] + dy)",0,1,0,1,0,2
25,def get_next_action(remaining_input: List[str]) -> Optional[str]:,1,1,1,1,1,5
26,return remaining_input.pop(0) if remaining_input else None,1,1,1,1,1,5
29,"if current_position == (4, 5) and get_next_action(actions) == ""south"":",1,1,1,1,1,5
31,"return {""valid_action_sequence"": False, ""final_position"": (4, 5)}",0,0,1,0,0,1
34,"if current_position == (4, 4) and get_next_action(actions) == ""south"":",1,1,0,1,1,4
36,"return {""valid_action_sequence"": False, ""final_position"": (4, 4)}",1,0,0,0,0,1
39,"if current_position == (3, 3) and get_next_action(actions) == ""south"":",0,1,0,1,1,3
40,"current_position = move(current_position, ""south"")",0,1,0,0,0,1
43,"if current_position == (4, 3) and get_next_action(actions) == ""south"":",0,1,0,1,1,3
44,"current_position = move(current_position, ""south"")",0,0,0,1,0,1
47,"if current_position == (5, 3) and get_next_action(actions) == ""east"":",0,1,0,1,1,3
49,"return {""valid_action_sequence"": False, ""final_position"": (5, 3)}",0,0,0,0,1,1
51,"return {""valid_action_sequence"": True, ""final_position"": current_position}",0,1,0,1,0,2
Col Sum,0,22,28,21,28,25,124
