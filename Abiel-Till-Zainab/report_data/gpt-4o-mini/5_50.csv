,Code,Test1,Test2,Test3,Test4,Coverage
1,"from typing import Dict, List, Tuple, Optional, Any",1,1,1,1,4
3,"def gridworld_5_cases_50_percent_returns(current_position: Tuple[int, int], actions: List[str]) -> Dict[str, Any]:",1,1,1,1,4
4,"""""""",1,1,1,1,4
5,Processes an action sequence in a 2d gridworld using an internal state.,1,1,1,1,4
7,Args:,1,1,1,1,4
8,"current_position (Tuple[int, int]): Position (x, y).",1,1,1,1,4
9,"actions (List[str]): List of actions, e.g., [""north"", ""east""].",1,1,1,1,4
11,Returns:,1,1,1,1,4
12,"Dict[str, any]: Contains valid_action_sequence (bool) and final_position (Tuple[int, int]).",1,1,1,1,4
13,"""""""",1,1,1,1,4
14,DIRECTIONS = {,1,1,1,1,4
15,"'north': (-1, 0),",1,1,1,1,4
16,"'south': (1, 0),",1,1,1,1,4
17,"'east': (0, 1),",1,1,1,1,4
18,"'west': (0, -1)",1,1,1,1,4
19,},1,1,1,1,4
21,"def move(position: Tuple[int, int], direction: str) -> Tuple[int, int]:",1,1,1,1,4
22,"dx, dy = DIRECTIONS[direction]",0,1,1,0,2
23,"return (position[0] + dx, position[1] + dy)",0,1,1,0,2
25,def get_next_action(remaining_input: List[str]) -> Optional[str]:,1,1,1,1,4
26,return remaining_input.pop(0) if remaining_input else None,1,1,1,1,4
29,"if current_position == (3, 2) and get_next_action(actions) == ""north"":",1,1,1,1,4
30,"current_position = move(current_position, ""north"")",0,1,0,0,1
33,"if current_position == (2, 2) and get_next_action(actions) == ""west"":",1,1,1,1,4
35,"return {""valid_action_sequence"": False, ""final_position"": (2, 2)}",1,0,0,0,1
38,"if current_position == (1, 4) and get_next_action(actions) == ""east"":",0,1,1,1,3
39,"current_position = move(current_position, ""east"")",0,0,1,0,1
42,"if current_position == (1, 5) and get_next_action(actions) == ""east"":",0,1,1,1,3
43,"current_position = move(current_position, ""east"")",0,0,1,0,1
46,"if current_position == (1, 6) and get_next_action(actions) == ""north"":",0,1,1,1,3
48,"return {""valid_action_sequence"": False, ""final_position"": (1, 6)}",0,0,0,1,1
50,"return {""valid_action_sequence"": True, ""final_position"": current_position}",0,1,1,0,2
Col Sum,0,22,28,29,25,104
